@using IndFusion.UI.Areas
@using IndFusion.UI.Models
@using MudBlazor
@inherits Microsoft.AspNetCore.Components.LayoutComponentBase

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="DrawerToggle" />
        <a href="https://www.exxerpro.com" target="_blank">
            <img src="img/exxerpro.png" alt="Exxerpro Logo" class="ml-3 app-logo" />
        </a>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.DataExploration" Color="Color.Inherit" Edge="Edge.Start" />
        <a href="/Oee" target="_blank">
            <img src="img/oee.png" alt="Data" class="ml-3 data-logo" />
        </a>
        <MudSpacer />
        <MudThemeProvider @bind-IsDarkMode="_isDarkMode" Theme="_theme" />
        @if (_menuOpen)

        {
            <IconBreadcrumb Items="_iconBreadcrumbItems" />


        }
        <MudSpacer />
        <MudThemeProvider @bind-IsDarkMode="_isDarkMode" Theme="_theme" />
        @if (_isDarkMode)

        {
            <MudIconButton Icon="@Icons.Material.Filled.LightMode" Color="Color.Inherit" Edge="Edge.End" OnClick="DarkToggle" />
        }

        else

        {
            <MudIconButton Icon="@Icons.Material.Filled.DarkMode" Color="Color.Inherit" Edge="Edge.End" OnClick="DarkToggle" />
        }
        @if (_menuOpen)

        {
            <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Inherit" OnClick="MenuToggle" Edge="Edge.End" />
        }

        else

        {
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" OnClick="MenuToggle" Edge="Edge.End" />
        }

        <MudIconButton Icon="@Icons.Material.Filled.Language" Color="Color.Inherit" OnClick="MenuLanguage" Edge="Edge.End" />

        @if (_login)

        {
            <MudIconButton Icon="@Icons.Material.Filled.Login" Color="Color.Inherit" OnClick="MenuLogIn" Edge="Edge.End" />
        }

        else

        {
            <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" OnClick="MenuLogIn" Edge="Edge.End" />
        }
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="mt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

<style>
    .data-logo {
        width: 120px;
        height: auto;
    }
</style>

@code {

    private List<BreadcrumbItemWithIcon> _iconBreadcrumbItems = new()
    {
        new BreadcrumbItemWithIcon("/", Icons.Material.Filled.Home),
        new BreadcrumbItemWithIcon("/machines", Icons.Material.Filled.Build),
        new BreadcrumbItemWithIcon("/oee", Icons.Material.Filled.Dashboard),
        new BreadcrumbItemWithIcon("/workflows", Icons.Material.Filled.Assessment),
        new BreadcrumbItemWithIcon("/services", Icons.Material.Filled.Build),
        new BreadcrumbItemWithIcon("/optimization", Icons.Material.Filled.Tune),
        new BreadcrumbItemWithIcon("/automation", Icons.Material.Filled.Factory),
        new BreadcrumbItemWithIcon("/sustainable-energy", Icons.Material.Filled.Savings),
        new BreadcrumbItemWithIcon("/artificial-vision", Icons.Material.Filled.Visibility),
        new BreadcrumbItemWithIcon("/data-storage", Icons.Material.Filled.Storage)
    };


    private MudTheme _theme = new();

    private bool _isDarkMode = true;

    private bool _drawerOpen = true;

    private bool _menuOpen = true;

    private bool _login = false;

    private bool _menuLanguage = false;



    private void DrawerToggle()

    {

        _drawerOpen = !_drawerOpen;

    }



    private void MenuLanguage()

    {

        _menuLanguage = !_menuLanguage;

    }



    private void MenuToggle()

    {

        _menuOpen = !_menuOpen;

    }



    private void DarkToggle()

    {

        _isDarkMode = !_isDarkMode;

    }



    private void MenuLogIn()

    {

        _login = !_login;

    }
}
